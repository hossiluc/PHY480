# HW grading scale: check(+) --> excellent (good code and analysis) 
#                   check    --> satisfactory (minor shortcomings in code and/or analysis)
#                   check(-) --> significant problems w/code or analysis

1) Problem 1 (area.cpp embellishments): 

Your code looks good. One very minor nitpick-- you didn't actually implement 
item 4 (splitting off the area calculation into a function). 

2)Problem 2 (sum up/down): 

I respect that you explored some "advanced" ideas in your code (using vectors, splitting
things off into an external file and making a header file), but the results are way off.
I understand what you're trying to do with the vectors, but it's far more important to 
be correct than to use a "clever" algorithm when first attacking a problem. (Once you 
are confident the results are correct, then you can start optimizing your algorithm
and looking for elegant ways to recast the calculation.)

Try redoing the calculation in a more brute force straightforward way. (I.e., code the equations
up as they appear on paper.) If you're stuck, I can show you how the results should look.

Also, you should go to much larger N values (see the hint on the webpage).

3) Problem 3 (bessel functions): 

Your plot looks fine, but the analysis is pretty sparse. For example, what's the slope in the linear region?
(Note: there's an interesting explanation for the value of this slope in the ch.4 notes,
though it's not expected for you to explain the value you get in your graph.) When
the relative difference gets big, what does that mean? Which one (up/down) is the culprit and why? 
How might the gsl result be useful to tease apart which approximation is more accurate in 
different regions?

##### HW grade = check(-) 

ps- Sorry this is so late. I only just noticed that I never cloned your repo, so it didn't show
up in my directory when I went through the grading many weeks ago.
